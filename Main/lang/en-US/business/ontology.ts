export default {
  ontology: 'Ontology',
  // 空列表
  emptyOntology: 'Empty Ontology',
  emptyClass: 'Empty Classes',
  emptyClassification: 'Empty Classification',
  // 新建 ontology
  createHolder: 'Enter name…',
  maxLength: 'The character length should not exceed 256',
  createOntology: 'Create Ontology',
  ontologyName: 'Ontology Name',
  ontologyType: 'Ontology Type',
  successCreated: 'Created Successfully',
  duplicate: 'Duplicate Ontology name',
  noOntologyName: 'Please enter name',
  // 删除 ontology
  deleteOntology: 'Delete Ontology',
  hasBeenDeleted: 'has been deleted',
  deletePlace: 'Enter Ontology name here…',
  sure: 'Are you sure you want to delete the Ontology?',
  removed: 'All Classes and Classifications will be removed. ',
  verify: 'Please enter the Ontology name for double verification.',
  // 重命名 ontology
  renameOntology: 'Rename Ontology',
  newName: 'New Name',
  hasBeenRenamed: 'has been renamed',
  hasExist: ' already exists. Please rename it.',
  Instruction: 'Instruction',
  QAOptional: 'QA Optional',
  // 搜索字段
  sort: {
    name: 'Item Name',
    creationTime: 'Created Date',
  },
  // 卡片列表
  card: {
    classesCount: 'Classes Count',
    type: 'Type',
    createdTime: 'Creation Time',
  },
  modalMapError: 'Please create the Class first.',
  inputType: {
    radio: 'Radio',
    mutiSelection: 'Multi Selection',
    dropdown: 'Dropdown',
    text: 'Text',
  },
  // 弹窗内部的文字
  modal: {
    treeGraph: 'Tree Graph',
    basicInfo: 'Basic Info',
    attributeName: 'Attribute Name',
    optionName: 'Option Name',
    inputType: 'Input Type',
    required: 'Required',
    root: 'Root',
    options: 'Options',
    attributes: 'Attributes',
    duplicatedName: 'Duplicated Name',
    colonNotAllowed: ': is not allowed',
    constraints: {
      constraints: 'Constraints',
      standard: 'Standard',
      length: 'Length',
      width: 'Width',
      height: 'Height',
      points: 'Points',
      unitStandard: 'm',
      size: 'Size',
      area: 'Area',
      unitImage: 'px',
      min: 'min',
      max: 'max',
    },
    defaultHeight: 'Default Height',
    minHeight: 'Min Height',
    minPoints: 'Min Points',
    // 校验 class|classification
    nameRequired: 'Name Required',
    alreadyExits: ' already exist.',
    enterNewName: 'Please enter a new name.',
    datasetType: {
      image: 'Image',
      lidar: 'LiDAR',
      lidarBasic: 'LiDAR Basic',
      lidarFusion: 'LiDAR Fusion',
    },
    toolType: {
      boundingBox: 'Bounding Box',
      polygon: 'Polygon',
      polyline: 'Poly-line',
      keyPoint: 'Keypoint',
      polygonPlus: 'Polygon (plus)',
      skeleton: 'Skeleton',
      curve: 'Curve',
      group: 'Group',
      imageCuboid: 'Cuboid',
      circle: 'Circle',
      ellipse: 'Ellipse',
      cuboid: 'Cuboid',
      segmentation: 'Segmentation',
      mask: 'Mask',
    },
    // 取消弹窗
    discard: 'Discard',
    discardChanges: 'Discard Changes',
    sureDiscard: 'Are you sure you want to discard the changes?',
    // options 校验
    optionsRequired: 'Options Required',
    optionValid: 'Are you sure you want to discard the changes?',
    optionValidFilled: 'Not all required fields have been filled. ',
    optionValidDiscard: 'Are you sure you want to discard this Attribute and its options?',
    // 标准框校验信息
    standardValidateMax: 'The maximum value should be larger than the minimum',
    standardValidateMin: 'The minimum value should be smaller than the maximum',
    sizeLimit: {
      sizeLimit: 'Size Limit',
      lengthLimit: 'Length limit',
      widthLimit: 'Width limit',
      areaLimit: 'Area limit',
      heightLimit: 'Height limit',
    },
    advancedConfiguration: 'Advanced Configuration',
    manageAttributes: 'Manage Attributes',
    numberOfPolygonPoints: 'Number of polygon sides',
    lidar: {
      resultType: 'Result Type',
      instance: 'Instance',
      semantic: 'Semantic',
    },
    skeleton: {
      option1: 'Left-click to add points',
      option2: 'Select and drag to change location',
      option3:
        'Press the Shift key, then click the source and target points to create a connection line.',
      option4: 'Press the Back key to delete a point or line',
      updatePicture: 'Update Picture',
      keyPointsLabel: 'Keypoints Label:',
      order: 'Order',
      label: 'Label',
      enterALabel: 'Enter a Label',
      labelRepeat: 'Repeated label',
      equidistantSkeleton: 'Equidistant Skeleton',
      inOrder: 'In Order',
      custom: 'Custom',
      skeletonAttributeConfiguration: 'Skeleton Attribute Configuration',
      attribute: 'Attribute',
      hotKey: 'Hotkey',
      common: 'Common',
      outside: 'Outside',
      cover: 'Cover',
      oneOrNone: '1 or None',
      enterATag: 'Enter a tag',
      tagRepeat: 'Repeat Tag',
      addConfiguration: 'Add Configuration',
      skeletonInfo: 'Skeleton Class has at least one keypoint',
    },
    alias: 'Alias',
    attributeAlias: 'Attribute Alias',
    optionAlias: 'Option Alias',
    classID: 'Class ID',
    classificationID: 'Classification ID',
    copied: 'Copied',
  },
  // 搜索表单
  searchForm: {
    search: 'Search',
    searchItems: 'Search items by name…',
    sort: 'Sort',
    filter: 'Filter',
    createdDate: 'Creation Date',
    datasetType: 'Dataset Type',
    toolType: 'Tool Type',
    activities: 'Activities',
  },
  // 复制
  copy: {
    copyEntireOntology: 'Copy Entire Ontology',
    copyFromOntology: 'Copy From Ontology Center',
    copyFrom: 'Copy From',
    next: 'Next',
    inputToSearch: 'Input to Search',
    copyClass: 'Copy Class from Ontology Center',
    copyClassification: 'Copy Classification from Ontology Center',
    copyPlaceholder: 'There is no ontology available for this type of dataset. You can go to ',
    copyOntologyCenter: 'Ontology Center ',
    copyToCreate: 'to create a new one.',
  },
  sync: {
    saveToOntology: 'Save to Ontology Center',
    selectOntology: 'Select an Ontology to save into',
    noOntology: 'There is no ontology available for this type of dataset. Please create a new one.',
    createAndSync: 'Create and Sync',
    successCreated: 'Successfully created and synchronized',
    classConflictTip:
      'Some Classes already exist in the destination Ontology. To resolve these conflicts, please choose either to keep the destination or to replace the destination with new Classes.',
    classificationConflictTip:
      'Some Classifications already exist in the destination ontology. To resolve these conflicts, please choose either to keep the destination or to replace the destination with new Classifications.',
  },
  conflict: {
    tips1:
      'Some Classes / Classifications already exist in your ontology. To resolve these conflicts, please choose either to',
    keep: 'Keep',
    original: 'Original or to',
    replace: 'Replace',
    originalNew: 'Original with New Classes/ Classifications.',
    replaceAll: 'Replace All',
    keepAll: 'Keep All',
    noConflict: 'No Conflict',
    className: 'Class Name',
    classificationName: 'Classifications Name',
    copied: 'Copied',
    classesAnd: 'Class(es) and',
    classes: 'Class(es)',
    classifications: ' Classification(s)',
    resolution: 'Resolution',
    conflicts: 'Conflicts',
  },
  import: {
    importByJson: 'Import via JSON',
    exportAsJson: 'Export as JSON',
    importClassesByJson: 'Import Class / Classifications via JSON',
    tip: 'Click to select a file or drag and drop the file here',
    supported: 'Supported file type: JSON',
    download: 'Download JSON Template',
    view: 'View the help document',
    uploadJson: 'You can only upload a JSON file!',
  },
  model: {
    modelMap: 'Model Map',
    model: 'Model',
    modelClasses: 'Model Classes',
    classDetail: 'Class Details',
    discardChange: 'Discard Changes',
    sureToDiscard: 'Are you sure you want to discard the changes?',
    modelMapError: 'Please select a Class',
  },
  copyClass: {
    copy: 'Copy',
    copiedSuccessfully: 'Copied successfully',
    copyMany: 'Copy Many',
    tip: 'Attributes and constraints of the copied class will be applied to others.',
    uploadByExcel: 'Upload by excel',
    template: 'Template',
    addSuccess: 'Added ({number}) classes successfully',
    addSuccessSome:
      ' Successfully added ({successNum}) classes, but encountered issues while adding ({failNum}) classes.',
    addFail: 'Fail to fetch information from your Excel, please check your file',
    overExcelToast: 'We can only add up to 999 rows at once',
    emptyToolType: "ToolType can't be empty",
    duplicatedName: "Class name can't be duplicated",
    successCopied: 'Copied ({number}) classes successfully',
    successCopiedPart:
      'Successfully copied ({successNum}) classes, but encountered issues while copying ({failNum}) classes.',
    failCopied: 'Fail to copy classes',
  },
};
