export default {
  team: 'Team',
  addMember: 'Add Members',
  invite: 'Invite',
  changeRole: 'Change Role',
  transferRole: 'Transfer Role',
  removeMember: 'Remove Team Member',
  removeConfirmText: 'Are you sure you want to remove the team member?',
  teamMember: 'Members',
  transfer: 'Transfer',
  applicant: 'Applicant',
  joinRequest: 'Member Joining Request',
  transferTip:
    'Once you transfer the team owner role to another member, your account will be set to a different role.',
  transferUserLabel: 'Transfer team owner role to',
  resetRoleLabel: 'Reset my role as',
  canelInviteBtn: 'Cancel Invitation',
  teamInfo: 'Team Info',
  pendingMembers: 'Pending Members',
  disbandTeam: 'Disband Team',
  createTeam: 'Create a Team',
  joinTeam: 'Join a Team',
  action: 'Action',
  tab: {
    member: 'Members',
    group: 'Groups',
    role: 'Roles',
    setting: 'Setting',
    planBilling: 'Plan & Billing',
    teamManagement: 'Team management',
    api: 'API',
    cloudStorage: 'Cloud Storage',
  },

  setting: {
    dangerZone: 'Danger Zone',
    transfer: 'Transfer',
    transferOwnership: 'Transfer Ownership',
    transferOwnershipDesc: 'Transfer this team to another user.',
    disbandTeam: 'Disband this team',
    disbandTeamDesc:
      'Once you disband a team, all data related to this team will be deleted permanently.',
    sureDelete: 'Are you sure you want to disband the {name}',
    removed: 'You can’t undo this action. All files, data and team members will be removed',
    type: ' Please type “{name}” to confirm ',
  },
  members: {
    manageUserRole: 'Manage User Roles',
    acceptSelected: 'Accept Selected',
    rejectSelected: 'Reject Selected',
    viewAll: 'View All',
    members: 'Members',
    inviteMember: 'Invite Member',
    selected: 'Selected',
    users: 'Users',
    tag: 'Tag',
    tags: 'Tags',
    createTag: 'Create Tag',
    category: 'Category',
    createCategory: 'Create Category',
    manageTags: 'Manage Tags',
    more: 'More',
    assign: 'Assign',
    assignTags: 'Assign Tags',
    assignGroup: 'Assign Groups',
    assignToGroup: 'Assign to Groups',
    assignRole: 'Assign Role',
    manageRole: 'Manage Role',
    permissions: 'Privileges',
    removeFromTeam: 'Remove from Team',
    cancelInvite: 'Cancel Invitation',
    importTitle: 'Import members via Excel',
    emptyTags: 'Please proceed to the Member page to add a tag',
    deleteTag1: 'Are you sure you want to delete label ',
    deleteTag2: 'Deleting a label will remove it from all associated members',
    deleteCategory1: 'Are you sure you want to delete category ',
    deleteCategory2:
      ' Deleting a category will remove all its tags, and these tags will also be removed from all associated members',
    active: 'Active',
    pending: 'Pending',
    cancel: 'Are you sure you want to cancel those member?',
    remove: 'Are you sure you want to remove those members?',
    pleaseSelectMembers: 'Please select members',
  },
  group: {
    owner: 'Owner',
    uploadTip: 'You can only upload JPG/JPEG/PNG files!',
    smaller: 'The file must be smaller than 20MB!',
    addSuccess: 'Member successfully added to the group',
    pleaseSelectMember: 'Please select member(s)',
    changeNameSuccess: 'Group name changed successfully',
    changeDescriptionSuccess: 'Group description changed successfully',
    removeSuccess: 'Member successfully removed from the group',
    deleteSuccess: 'Group deleted successfully',
  },
  role: {
    privilegesCannotBeEmpty: 'Privileges cannot be empty',
    editRoleSuccessfully: 'Successfully edited the Role',
    createRoleSuccessfully: 'Successfully created the Role',
    deleteRoleSuccessfully: 'Role deleted successfully',
  },
  assign: {
    tagsWithoutCategory: 'Tags without category',
    assignGroupToMember: 'Successfully assigned a group to the member',
    assignGroupToMembers: 'Successfully assigned a group to {number} members',
    assignTagToMember: 'Successfully assigned a tag to the member',
    assignTagToMembers: 'Successfully assigned a tag to {number} members',
    assignRoleToMember: 'Successfully assigned a role to the member',
    assignRoleToMembers: ' Successfully assigned a role to {number} members',
  },
  form: {
    emailCanNotBeNull: 'Email can not be empty',
    accountCanNotBeNull: 'Account can not be empty',
    pleaseEnterAValidEmail: 'Please enter a valid email',
    roleCanNotBeNull: 'Role can not be empty',
  },
  import: {
    or: 'Or',
    importByExcel: 'Import via Excel',
    drag: 'Drag & drop files or',
    browse: 'Browse',
    supported:
      'Supported formats: xls, xlsx. The "Email" and "Role" fields are required in your file, and the Role field must be from your role list.',
    invitation: 'A maximum of 100 members can be invited at once',
    uploadSuccess: 'Uploaded successfully',
    download: 'Click to download the Excel template',
    errorTip: 'Only xls/xlsx files can be uploaded!',
  },
  teamExpire: {
    expireTitle: 'Team Expiration Reminder',
    disableTitle: 'Team Disablement Reminder',
    expireTips:
      'The package for team { teamName } has expired. To continue using it, please contact customer service.',
    disableTips:
      'Team { teamName } has been disabled. To continue using it, please contact customer service.',
    switchTeam: 'Switch Team',
  },
  billing: {
    billingExpireTip:
      'Your team has completed the unsubscription process and will expire on { date }.',
    currentPlan: 'Current Plan',
    expiresOn: 'Expires on { date }',
    expiredOn: 'Expired on { date }',
    month: '/Month',
    quarter: '/Quarter',
    halfYear: '/Half year',
    year: '/Year',
    perMonth: 'Per Month',
    perQuarter: 'Per Quarter',
    perHalfYear: 'Per Half Year',
    perYear: 'Per Year',
    additionalModelCalls: 'Additional Model Calls',
    paymentProcessing: 'Payment Processing',
    subscriptionAgreement: 'Subscription Agreement',
    billingForm: {
      select: 'Select',
      monthly: 'Monthly',
      quarterly: 'Quarterly',
      semiAnnual: 'Semi-annual',
      annual: 'Annual',
      yearly: 'Yearly',
      members: 'Members',
      storage: 'Storage',
      storageSpace: 'Storage Space',
      modelCalls: 'Model Calls',
      modelCallsTip:
        'The current team has { member } members and { storage }GB of data. Please reduce the number of team members and the amount of storage data to comply with the downgraded plan before the next cycle starts.',
      additional: 'Additional',
    },
    unsubscribeModal: {
      unsubscribe: 'Unsubscribe',
      unsubscription: 'Unsubscription',
      sureUnsubscribe: 'Are you sure you want to unsubscribe from BasicAI?',
      unsubscribeTips:
        "Confirmation to unsubscribe will take effect immediately, and you will not be able to access your team's functions after the current payment cycle.",
    },
    subscribeModal: {
      subscribe: 'Subscribe',
      subscribeToAPlan: 'Subscribe to a plan',
      teamPlan: 'Team plan',
      enterprisePlan: 'Enterprise Plan',
      newPlan: 'New Plan',
      off: '{ discount } OFF',
      enterpriseTip:
        'You can contact us immediately to customize the payment cycle, number of members, storage space and number of model calls, and get an exclusive plan for your company.',
      planList: {
        dataManagement: 'Data management',
        modelsManagement: 'Models Management',
        taskManagement: 'Task management',
        ontologyManagement: 'Ontology Management',
        image: 'Image & Image Frame Tool',
        Lidar: 'LiDAR + LiDAR Fusion & LiDAR Frame Tool',
        organizationManagement: 'Organization Management',
        custom: 'Custom Members, Storage, and Model Calls',
        dedicated: 'Dedicated customer operations support',
      },
      result: {
        paymentSuccess: 'Payment Successful',
        subscriptionSuccess: 'Subscribed Successfully',
        successTip1: 'Thank you for doing business with us!',
        successTip2: 'Start your efficient annotation and deployment.',
        getStarted: 'Get Started',
        paymentFailed: 'Payment Failed',
        failedTip1: 'The payment was unsuccessful due to an anomaly.',
        failedTip2: 'Please try again later or use a different payment method.',
        tryAgain: 'Try Again',
      },
      validInfo: '*Valid for 1 month from the delivery date',
    },
    gradeModal: {
      upgrade: 'Upgrade',
      upgradeTip1: "*This team's plan will be upgraded.",
      upgradeTip2:
        'It will take effect immediately this month of the current plan, and the new upgraded plan will automatically be subscribed to from next month.',
      upgradeTip3:
        'The payment for this upgrade may be prorated, as appropriate, based on the billing cycle of the selected plan.',
      downgrade: 'Downgrade',
      downgradeTip1: "*This team's plan will be downgraded.",
      downgradeTip2:
        'It will take effect from next month and the new downgraded plan will be automatically subscribed to.',

      prorated:
        '*The estimated total may be prorated, as appropriate, based on the billing cycle of the selected plan.',
      sureDowngrade: 'Are you sure you want to downgrade your Team Plan?',
      original: 'Original',
      current: 'Current',
      teamPlan: 'Team Plan (5 members, 200GB storage)',
    },
    modelCallsModal: {
      append: 'Append',
      addModelCalls: 'Add Model Calls',
      modelCallsTip: 'Used this month / Usage remaining this month (Total)',
    },
    resumeModal: {
      sureResume: 'Are you sure you want to resume the subscription?',
    },
    billingTable: {
      billingInvoice: 'Billing & Invoice',
      billingID: 'Billing ID',
      invoiceID: 'Invoice ID',
      service: 'Service',
      paymentPeriod: 'Payment Period',
      amountPaid: 'Amount Paid',
      paidOn: 'Paid On',
      paymentMethod: 'Payment Method',
      status: 'Status',
      paid: 'Paid',
      failed: 'Failed',
      refunded: 'Refunded',
      pending: 'Pending',
    },
    billingCard: {
      upcomingBilling: 'Upcoming Billing',
      total: 'Total',
      autoPayOn: 'Auto-pay on {date}',
      newPriceAt: 'New price at UTC on { date }',
      paymentDetails: 'Payment Details',
      paymentMethod: 'Payment Method',
      billingAddress: 'Billing Address',
      manage: 'Manage',
      change: 'Change',
      accepted: 'Accepted',
      creditCardEndingIn: 'Credit card ending in',
    },
    priceChangeModal: {
      priceChange: 'Price Change',
      thisMonth: 'This month',
      afterAdjust: '{ amount } in the next month after the price adjustment',
      subtotal: 'Subtotal',
      salesTax: 'Sales tax { taxRate }',
    },
  },
  teamWarnings: {
    planExpirationReminder: 'Plan Expiration Reminder',
    planLimitReminder: 'Plan Limit Reminder',
    planDisabledReminder: 'Disabled Reminder',
    planExpiredWarning:
      "The plan for team {teamName} has expired. Please subscribe to a plan to regain access to your team's features.",
    planMemberWarning:
      'The number of team members exceeds the plan limit. Please manage your team size or upgrade your plan.',
    planStorageWarning:
      'The team storage usage exceeds the plan limit. Please manage your datasets or upgrade your plan.',
    planMemberAndStorageWarning:
      'Both the team storage usage and the number of team members exceed the plan limit. Please manage these issues or upgrade your plan.',
    planMemberWarningForWorker:
      'The number of team members exceeds the plan limit. Please wait for your team manager to resolve the issue.',
    planStorageWarningForWorker:
      'The team storage usage exceeds the plan limit. Please wait for your team manager to resolve the issue.',
    planMemberAndStorageWarningForWorker:
      'Both the team storage usage and the number of team members exceed the plan limit. Please wait for your team manager to resolve these issues.',
    subscribeButton: 'Subscribe to a plan',
    manageMembersButton: 'Manage Members',
    manageDatasetButton: 'Manage Datasets',
    upgradePlanButton: 'Upgrade Plan',
  },
  teamTimezone: {
    placeholder: 'Timezone',
    timezone: 'Timezone',
    required: 'Please Select Team Time Zone',
  },
  api: {
    myTeamAPIs: 'My Team APIs',
    apiTip:
      'API keys are capable of performing dangerous operations. Be careful when sharing your API key with others or exposing it in the browser. Please note that we do not display your secret API keys again after you generate them.',
    emptyApi: "You don't have any API Keys, create one?",
    createAPIKey: 'Create a API Key',
    APIKeyName: 'API Key Name',
    expirationDate: 'Expiration Date',
    neverExpired: 'Never expired',
    createAPITip:
      'Please note that we do not display your secret API keys again after you close this dialog. Make sure you have copied it',
    newApiKey: '🎉 Your new api key',
  },
  storage: {
    cloudStorage: 'Cloud Storage',
    storageTip:
      'You can integrate and manage your cloud storage here, your credential is safe with us and it will only be used for data upload and export',
    emptyStorage: "You don't have any cloud storage, create one?",
    deleteCloudStorage: 'Delete an Cloud Storage?',
    deleteStorageTip:
      'You are going to delete an cloud storage, this action is irrevocable, do you wish to proceed?',
    cloudStorageProfile: 'Cloud Storage Profile',
    cloudStorageName: 'Cloud Storage Name',
    storageName: 'Storage name',
    duplicateStorage: 'Cloud storage name cannot be duplicated',
    overStorage: 'Cloud storage name cannot more than 255 characters',
    provider: 'Provider',
    providerList: {
      amazonS3: 'Amazon S3',
      azureBlobStorage: 'Azure Blob Storage',
      googleDrive: 'Google Drive',
      box: 'Box',
      dropbox: 'Dropbox',
      baiduDrive: 'Baidu Drive',
      alibabaS3: 'Alibaba OSS',
    },
    server: 'Server',
    port: 'Port',
    location: 'Location',
    URL: 'URL',
    accessKeyID: 'Access Key ID',
    secretAccessKey: 'Secret Access Key',
    bucketName: 'Bucket name',
    containerName: 'Container name',
    storageAccountName: 'Storage Account Name',
    primaryAccessKey: 'Primary Access Key',
    connectWithGoogleDrive: 'Connect with Google Drive',
    connectWithBox: 'Connect with Box',
    connectWithDropbox: 'Connect with Dropbox',
    connectWithBaiduDrive: 'Connect with Baidu Drive',
    haveConnectedWith: 'You have connected with {drive}',
    failedToFetch: 'Fail to fetch your {drive} authentication. Please try again',
    failedToConnect: 'Fail to connect with your cloud. Please check your credentials',
    successConnect: 'Congratulations! Your authentication has been completed!',
    failConnect: 'Failed to fetch your authentication. Please try again.',
  },
};
